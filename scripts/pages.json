[{"name":"Contains","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.Contains","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-contains/index.html","searchKeys":["Contains","Contains","video.api.player.views.ApiVideoExoPlayerView.ViewFit.Contains"]},{"name":"Fill","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.Fill","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-fill/index.html","searchKeys":["Fill","Fill","video.api.player.views.ApiVideoExoPlayerView.ViewFit.Fill"]},{"name":"FitHeight","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.FitHeight","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-fit-height/index.html","searchKeys":["FitHeight","FitHeight","video.api.player.views.ApiVideoExoPlayerView.ViewFit.FitHeight"]},{"name":"FitWidth","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.FitWidth","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-fit-width/index.html","searchKeys":["FitWidth","FitWidth","video.api.player.views.ApiVideoExoPlayerView.ViewFit.FitWidth"]},{"name":"LIVE","description":"video.api.player.models.VideoType.LIVE","location":"player/video.api.player.models/-video-type/-l-i-v-e/index.html","searchKeys":["LIVE","LIVE","video.api.player.models.VideoType.LIVE"]},{"name":"VOD","description":"video.api.player.models.VideoType.VOD","location":"player/video.api.player.models/-video-type/-v-o-d/index.html","searchKeys":["VOD","VOD","video.api.player.models.VideoType.VOD"]},{"name":"Zoom","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.Zoom","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-zoom/index.html","searchKeys":["Zoom","Zoom","video.api.player.views.ApiVideoExoPlayerView.ViewFit.Zoom"]},{"name":"class ApiVideoExoPlayerMediaFactory(videoOptions: VideoOptions, onError: (Exception) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory","location":"player/video.api.player.models/-api-video-exo-player-media-factory/index.html","searchKeys":["ApiVideoExoPlayerMediaFactory","class ApiVideoExoPlayerMediaFactory(videoOptions: VideoOptions, onError: (Exception) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory"]},{"name":"class ApiVideoExoPlayerView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : FrameLayout","description":"video.api.player.views.ApiVideoExoPlayerView","location":"player/video.api.player.views/-api-video-exo-player-view/index.html","searchKeys":["ApiVideoExoPlayerView","class ApiVideoExoPlayerView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : FrameLayout","video.api.player.views.ApiVideoExoPlayerView"]},{"name":"class ApiVideoMediaFactory(videoOptions: VideoOptions, onError: (Exception) -> Unit)","description":"video.api.player.models.ApiVideoMediaFactory","location":"player/video.api.player.models/-api-video-media-factory/index.html","searchKeys":["ApiVideoMediaFactory","class ApiVideoMediaFactory(videoOptions: VideoOptions, onError: (Exception) -> Unit)","video.api.player.models.ApiVideoMediaFactory"]},{"name":"class ApiVideoPlayerController(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n        context\n    ))","description":"video.api.player.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/index.html","searchKeys":["ApiVideoPlayerController","class ApiVideoPlayerController(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n        context\n    ))","video.api.player.ApiVideoPlayerController"]},{"name":"class ApiVideoPlayerFullScreenController(fragmentManager: FragmentManager, originalPlayerView: ApiVideoExoPlayerView, playerController: ApiVideoPlayerController, fullScreenListener: ApiVideoExoPlayerView.FullScreenListener? = null) : ApiVideoExoPlayerView.FullScreenListener","description":"video.api.player.models.ApiVideoPlayerFullScreenController","location":"player/video.api.player.models/-api-video-player-full-screen-controller/index.html","searchKeys":["ApiVideoPlayerFullScreenController","class ApiVideoPlayerFullScreenController(fragmentManager: FragmentManager, originalPlayerView: ApiVideoExoPlayerView, playerController: ApiVideoPlayerController, fullScreenListener: ApiVideoExoPlayerView.FullScreenListener? = null) : ApiVideoExoPlayerView.FullScreenListener","video.api.player.models.ApiVideoPlayerFullScreenController"]},{"name":"class ApiVideoPlayerNotificationController constructor(context: Context, playerNotificationManager: PlayerNotificationManager, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG))","description":"video.api.player.notifications.ApiVideoPlayerNotificationController","location":"player/video.api.player.notifications/-api-video-player-notification-controller/index.html","searchKeys":["ApiVideoPlayerNotificationController","class ApiVideoPlayerNotificationController constructor(context: Context, playerNotificationManager: PlayerNotificationManager, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG))","video.api.player.notifications.ApiVideoPlayerNotificationController"]},{"name":"class FullScreenDialogFragment(subView: View) : DialogFragment","description":"video.api.player.views.FullScreenDialogFragment","location":"player/video.api.player.views/-full-screen-dialog-fragment/index.html","searchKeys":["FullScreenDialogFragment","class FullScreenDialogFragment(subView: View) : DialogFragment","video.api.player.views.FullScreenDialogFragment"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","description":"video.api.player.views.ApiVideoExoPlayerView.ApiVideoExoPlayerView","location":"player/video.api.player.views/-api-video-exo-player-view/-api-video-exo-player-view.html","searchKeys":["ApiVideoExoPlayerView","constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0)","video.api.player.views.ApiVideoExoPlayerView.ApiVideoExoPlayerView"]},{"name":"constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n        context\n    ))","description":"video.api.player.ApiVideoPlayerController.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/-api-video-player-controller.html","searchKeys":["ApiVideoPlayerController","constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n        context\n    ))","video.api.player.ApiVideoPlayerController.ApiVideoPlayerController"]},{"name":"constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, playerView: ApiVideoExoPlayerView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","description":"video.api.player.ApiVideoPlayerController.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/-api-video-player-controller.html","searchKeys":["ApiVideoPlayerController","constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, playerView: ApiVideoExoPlayerView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","video.api.player.ApiVideoPlayerController.ApiVideoPlayerController"]},{"name":"constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, playerView: PlayerView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","description":"video.api.player.ApiVideoPlayerController.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/-api-video-player-controller.html","searchKeys":["ApiVideoPlayerController","constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, playerView: PlayerView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","video.api.player.ApiVideoPlayerController.ApiVideoPlayerController"]},{"name":"constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, surface: Surface, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","description":"video.api.player.ApiVideoPlayerController.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/-api-video-player-controller.html","searchKeys":["ApiVideoPlayerController","constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, surface: Surface, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","video.api.player.ApiVideoPlayerController.ApiVideoPlayerController"]},{"name":"constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, surfaceView: SurfaceView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","description":"video.api.player.ApiVideoPlayerController.ApiVideoPlayerController","location":"player/video.api.player/-api-video-player-controller/-api-video-player-controller.html","searchKeys":["ApiVideoPlayerController","constructor(context: Context, initialVideoOptions: VideoOptions? = null, initialAutoplay: Boolean = false, listener: ApiVideoPlayerController.Listener? = null, surfaceView: SurfaceView, looper: Looper = Looper.myLooper() ?: Looper.getMainLooper(), notificationController: ApiVideoPlayerNotificationController? = ApiVideoPlayerNotificationController(\n            context\n        ))","video.api.player.ApiVideoPlayerController.ApiVideoPlayerController"]},{"name":"constructor(context: Context, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG), notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationStyle: NotificationStyle = NotificationStyle())","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.ApiVideoPlayerNotificationController","location":"player/video.api.player.notifications/-api-video-player-notification-controller/-api-video-player-notification-controller.html","searchKeys":["ApiVideoPlayerNotificationController","constructor(context: Context, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG), notificationId: Int = DEFAULT_NOTIFICATION_ID, channelId: String = DEFAULT_NOTIFICATION_CHANNEL_ID, channelNameResourceId: Int = R.string.default_channel_name, channelDescriptionResourceId: Int = 0, notificationStyle: NotificationStyle = NotificationStyle())","video.api.player.notifications.ApiVideoPlayerNotificationController.ApiVideoPlayerNotificationController"]},{"name":"constructor(context: Context, playerNotificationManager: PlayerNotificationManager, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG))","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.ApiVideoPlayerNotificationController","location":"player/video.api.player.notifications/-api-video-player-notification-controller/-api-video-player-notification-controller.html","searchKeys":["ApiVideoPlayerNotificationController","constructor(context: Context, playerNotificationManager: PlayerNotificationManager, mediaSession: MediaSessionCompat = MediaSessionCompat(context, TAG))","video.api.player.notifications.ApiVideoPlayerNotificationController.ApiVideoPlayerNotificationController"]},{"name":"constructor(fragmentManager: FragmentManager, originalPlayerView: ApiVideoExoPlayerView, playerController: ApiVideoPlayerController, fullScreenListener: ApiVideoExoPlayerView.FullScreenListener? = null)","description":"video.api.player.models.ApiVideoPlayerFullScreenController.ApiVideoPlayerFullScreenController","location":"player/video.api.player.models/-api-video-player-full-screen-controller/-api-video-player-full-screen-controller.html","searchKeys":["ApiVideoPlayerFullScreenController","constructor(fragmentManager: FragmentManager, originalPlayerView: ApiVideoExoPlayerView, playerController: ApiVideoPlayerController, fullScreenListener: ApiVideoExoPlayerView.FullScreenListener? = null)","video.api.player.models.ApiVideoPlayerFullScreenController.ApiVideoPlayerFullScreenController"]},{"name":"constructor(smallIconResourceId: Int = R.drawable.ic_api_video, colorResourceId: Int = R.color.primary_orange, visibility: Int = NotificationCompat.VISIBILITY_PUBLIC)","description":"video.api.player.notifications.NotificationStyle.NotificationStyle","location":"player/video.api.player.notifications/-notification-style/-notification-style.html","searchKeys":["NotificationStyle","constructor(smallIconResourceId: Int = R.drawable.ic_api_video, colorResourceId: Int = R.color.primary_orange, visibility: Int = NotificationCompat.VISIBILITY_PUBLIC)","video.api.player.notifications.NotificationStyle.NotificationStyle"]},{"name":"constructor(subView: View)","description":"video.api.player.views.FullScreenDialogFragment.FullScreenDialogFragment","location":"player/video.api.player.views/-full-screen-dialog-fragment/-full-screen-dialog-fragment.html","searchKeys":["FullScreenDialogFragment","constructor(subView: View)","video.api.player.views.FullScreenDialogFragment.FullScreenDialogFragment"]},{"name":"constructor(uri: String, xTokenSession: String? = null)","description":"video.api.player.models.PlayerMediaRequest.PlayerMediaRequest","location":"player/video.api.player.models/-player-media-request/-player-media-request.html","searchKeys":["PlayerMediaRequest","constructor(uri: String, xTokenSession: String? = null)","video.api.player.models.PlayerMediaRequest.PlayerMediaRequest"]},{"name":"constructor(videoId: String, token: String?)","description":"video.api.player.models.VideoOptions.VideoOptions","location":"player/video.api.player.models/-video-options/-video-options.html","searchKeys":["VideoOptions","constructor(videoId: String, token: String?)","video.api.player.models.VideoOptions.VideoOptions"]},{"name":"constructor(videoId: String, videoType: VideoType, token: String? = null)","description":"video.api.player.models.VideoOptions.VideoOptions","location":"player/video.api.player.models/-video-options/-video-options.html","searchKeys":["VideoOptions","constructor(videoId: String, videoType: VideoType, token: String? = null)","video.api.player.models.VideoOptions.VideoOptions"]},{"name":"constructor(videoOptions: VideoOptions, onError: (Exception) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.ApiVideoExoPlayerMediaFactory","location":"player/video.api.player.models/-api-video-exo-player-media-factory/-api-video-exo-player-media-factory.html","searchKeys":["ApiVideoExoPlayerMediaFactory","constructor(videoOptions: VideoOptions, onError: (Exception) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.ApiVideoExoPlayerMediaFactory"]},{"name":"constructor(videoOptions: VideoOptions, onError: (Exception) -> Unit)","description":"video.api.player.models.ApiVideoMediaFactory.ApiVideoMediaFactory","location":"player/video.api.player.models/-api-video-media-factory/-api-video-media-factory.html","searchKeys":["ApiVideoMediaFactory","constructor(videoOptions: VideoOptions, onError: (Exception) -> Unit)","video.api.player.models.ApiVideoMediaFactory.ApiVideoMediaFactory"]},{"name":"data class NotificationStyle(val smallIconResourceId: Int = R.drawable.ic_api_video, val colorResourceId: Int = R.color.primary_orange, val visibility: Int = NotificationCompat.VISIBILITY_PUBLIC)","description":"video.api.player.notifications.NotificationStyle","location":"player/video.api.player.notifications/-notification-style/index.html","searchKeys":["NotificationStyle","data class NotificationStyle(val smallIconResourceId: Int = R.drawable.ic_api_video, val colorResourceId: Int = R.color.primary_orange, val visibility: Int = NotificationCompat.VISIBILITY_PUBLIC)","video.api.player.notifications.NotificationStyle"]},{"name":"data class PlayerMediaRequest(val uri: String, val xTokenSession: String? = null)","description":"video.api.player.models.PlayerMediaRequest","location":"player/video.api.player.models/-player-media-request/index.html","searchKeys":["PlayerMediaRequest","data class PlayerMediaRequest(val uri: String, val xTokenSession: String? = null)","video.api.player.models.PlayerMediaRequest"]},{"name":"data class VideoOptions(val videoId: String, val videoType: VideoType, val token: String? = null)","description":"video.api.player.models.VideoOptions","location":"player/video.api.player.models/-video-options/index.html","searchKeys":["VideoOptions","data class VideoOptions(val videoId: String, val videoType: VideoType, val token: String? = null)","video.api.player.models.VideoOptions"]},{"name":"enum VideoType : Enum<VideoType> ","description":"video.api.player.models.VideoType","location":"player/video.api.player.models/-video-type/index.html","searchKeys":["VideoType","enum VideoType : Enum<VideoType> ","video.api.player.models.VideoType"]},{"name":"enum ViewFit : Enum<ApiVideoExoPlayerView.ViewFit> ","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/index.html","searchKeys":["ViewFit","enum ViewFit : Enum<ApiVideoExoPlayerView.ViewFit> ","video.api.player.views.ApiVideoExoPlayerView.ViewFit"]},{"name":"fun ExoPlayer.addMediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.addMediaSource","location":"player/video.api.player.extensions/add-media-source.html","searchKeys":["addMediaSource","fun ExoPlayer.addMediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.addMediaSource"]},{"name":"fun ExoPlayer.addMediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.addMediaSource","location":"player/video.api.player.extensions/add-media-source.html","searchKeys":["addMediaSource","fun ExoPlayer.addMediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.addMediaSource"]},{"name":"fun ExoPlayer.addMp4MediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.addMp4MediaSource","location":"player/video.api.player.extensions/add-mp4-media-source.html","searchKeys":["addMp4MediaSource","fun ExoPlayer.addMp4MediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.addMp4MediaSource"]},{"name":"fun ExoPlayer.addMp4MediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.addMp4MediaSource","location":"player/video.api.player.extensions/add-mp4-media-source.html","searchKeys":["addMp4MediaSource","fun ExoPlayer.addMp4MediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.addMp4MediaSource"]},{"name":"fun ExoPlayer.setMediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.setMediaSource","location":"player/video.api.player.extensions/set-media-source.html","searchKeys":["setMediaSource","fun ExoPlayer.setMediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.setMediaSource"]},{"name":"fun ExoPlayer.setMediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMediaSource","location":"player/video.api.player.extensions/set-media-source.html","searchKeys":["setMediaSource","fun ExoPlayer.setMediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMediaSource"]},{"name":"fun ExoPlayer.setMp4MediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.setMp4MediaSource","location":"player/video.api.player.extensions/set-mp4-media-source.html","searchKeys":["setMp4MediaSource","fun ExoPlayer.setMp4MediaSource(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.setMp4MediaSource"]},{"name":"fun ExoPlayer.setMp4MediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMp4MediaSource","location":"player/video.api.player.extensions/set-mp4-media-source.html","searchKeys":["setMp4MediaSource","fun ExoPlayer.setMp4MediaSource(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMp4MediaSource"]},{"name":"fun MediaPlayer.setDataSource(context: Context, videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setDataSource","location":"player/video.api.player.extensions/set-data-source.html","searchKeys":["setDataSource","fun MediaPlayer.setDataSource(context: Context, videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setDataSource"]},{"name":"fun MediaPlayer.setDataSource(context: Context, videoUrlFactory: ApiVideoMediaFactory)","description":"video.api.player.extensions.setDataSource","location":"player/video.api.player.extensions/set-data-source.html","searchKeys":["setDataSource","fun MediaPlayer.setDataSource(context: Context, videoUrlFactory: ApiVideoMediaFactory)","video.api.player.extensions.setDataSource"]},{"name":"fun MediaPlayer.setMp4DataSource(context: Context, videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMp4DataSource","location":"player/video.api.player.extensions/set-mp4-data-source.html","searchKeys":["setMp4DataSource","fun MediaPlayer.setMp4DataSource(context: Context, videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMp4DataSource"]},{"name":"fun MediaPlayer.setMp4DataSource(context: Context, videoUrlFactory: ApiVideoMediaFactory)","description":"video.api.player.extensions.setMp4DataSource","location":"player/video.api.player.extensions/set-mp4-data-source.html","searchKeys":["setMp4DataSource","fun MediaPlayer.setMp4DataSource(context: Context, videoUrlFactory: ApiVideoMediaFactory)","video.api.player.extensions.setMp4DataSource"]},{"name":"fun Player.addMediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.addMediaItem","location":"player/video.api.player.extensions/add-media-item.html","searchKeys":["addMediaItem","fun Player.addMediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.addMediaItem"]},{"name":"fun Player.addMediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.addMediaItem","location":"player/video.api.player.extensions/add-media-item.html","searchKeys":["addMediaItem","fun Player.addMediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.addMediaItem"]},{"name":"fun Player.addMp4MediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.addMp4MediaItem","location":"player/video.api.player.extensions/add-mp4-media-item.html","searchKeys":["addMp4MediaItem","fun Player.addMp4MediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.addMp4MediaItem"]},{"name":"fun Player.addMp4MediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.addMp4MediaItem","location":"player/video.api.player.extensions/add-mp4-media-item.html","searchKeys":["addMp4MediaItem","fun Player.addMp4MediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.addMp4MediaItem"]},{"name":"fun Player.getStateFrom(otherPlayer: Player)","description":"video.api.player.extensions.getStateFrom","location":"player/video.api.player.extensions/get-state-from.html","searchKeys":["getStateFrom","fun Player.getStateFrom(otherPlayer: Player)","video.api.player.extensions.getStateFrom"]},{"name":"fun Player.setMediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.setMediaItem","location":"player/video.api.player.extensions/set-media-item.html","searchKeys":["setMediaItem","fun Player.setMediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.setMediaItem"]},{"name":"fun Player.setMediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMediaItem","location":"player/video.api.player.extensions/set-media-item.html","searchKeys":["setMediaItem","fun Player.setMediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMediaItem"]},{"name":"fun Player.setMp4MediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","description":"video.api.player.extensions.setMp4MediaItem","location":"player/video.api.player.extensions/set-mp4-media-item.html","searchKeys":["setMp4MediaItem","fun Player.setMp4MediaItem(mediaSourceFactory: ApiVideoExoPlayerMediaFactory)","video.api.player.extensions.setMp4MediaItem"]},{"name":"fun Player.setMp4MediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMp4MediaItem","location":"player/video.api.player.extensions/set-mp4-media-item.html","searchKeys":["setMp4MediaItem","fun Player.setMp4MediaItem(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMp4MediaItem"]},{"name":"fun String.appendTokenSession(tokenSession: String?): String","description":"video.api.player.extensions.appendTokenSession","location":"player/video.api.player.extensions/append-token-session.html","searchKeys":["appendTokenSession","fun String.appendTokenSession(tokenSession: String?): String","video.api.player.extensions.appendTokenSession"]},{"name":"fun String.parseAsVideoOptions(): VideoOptions","description":"video.api.player.extensions.parseAsVideoOptions","location":"player/video.api.player.extensions/parse-as-video-options.html","searchKeys":["parseAsVideoOptions","fun String.parseAsVideoOptions(): VideoOptions","video.api.player.extensions.parseAsVideoOptions"]},{"name":"fun String.toVideoType(): VideoType","description":"video.api.player.extensions.toVideoType","location":"player/video.api.player.extensions/to-video-type.html","searchKeys":["toVideoType","fun String.toVideoType(): VideoType","video.api.player.extensions.toVideoType"]},{"name":"fun URL.parseAsVideoOptions(): VideoOptions","description":"video.api.player.extensions.parseAsVideoOptions","location":"player/video.api.player.extensions/parse-as-video-options.html","searchKeys":["parseAsVideoOptions","fun URL.parseAsVideoOptions(): VideoOptions","video.api.player.extensions.parseAsVideoOptions"]},{"name":"fun VideoView.setMp4Video(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setMp4Video","location":"player/video.api.player.extensions/set-mp4-video.html","searchKeys":["setMp4Video","fun VideoView.setMp4Video(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setMp4Video"]},{"name":"fun VideoView.setMp4Video(videoUrlFactory: ApiVideoMediaFactory)","description":"video.api.player.extensions.setMp4Video","location":"player/video.api.player.extensions/set-mp4-video.html","searchKeys":["setMp4Video","fun VideoView.setMp4Video(videoUrlFactory: ApiVideoMediaFactory)","video.api.player.extensions.setMp4Video"]},{"name":"fun VideoView.setVideo(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","description":"video.api.player.extensions.setVideo","location":"player/video.api.player.extensions/set-video.html","searchKeys":["setVideo","fun VideoView.setVideo(videoOptions: VideoOptions, onError: (Exception) -> Unit = { error ->\n        Log.e(\n            TAG,\n            \"Failed to create session $error\"\n        )\n    })","video.api.player.extensions.setVideo"]},{"name":"fun VideoView.setVideo(videoUrlFactory: ApiVideoMediaFactory)","description":"video.api.player.extensions.setVideo","location":"player/video.api.player.extensions/set-video.html","searchKeys":["setVideo","fun VideoView.setVideo(videoUrlFactory: ApiVideoMediaFactory)","video.api.player.extensions.setVideo"]},{"name":"fun Window.hideSystemUI()","description":"video.api.player.extensions.hideSystemUI","location":"player/video.api.player.extensions/hide-system-u-i.html","searchKeys":["hideSystemUI","fun Window.hideSystemUI()","video.api.player.extensions.hideSystemUI"]},{"name":"fun addListener(listener: ApiVideoPlayerController.Listener)","description":"video.api.player.ApiVideoPlayerController.addListener","location":"player/video.api.player/-api-video-player-controller/add-listener.html","searchKeys":["addListener","fun addListener(listener: ApiVideoPlayerController.Listener)","video.api.player.ApiVideoPlayerController.addListener"]},{"name":"fun duplicate(): ApiVideoExoPlayerView","description":"video.api.player.views.ApiVideoExoPlayerView.duplicate","location":"player/video.api.player.views/-api-video-exo-player-view/duplicate.html","searchKeys":["duplicate","fun duplicate(): ApiVideoExoPlayerView","video.api.player.views.ApiVideoExoPlayerView.duplicate"]},{"name":"fun fromUrl(url: String): VideoOptions","description":"video.api.player.models.VideoOptions.Companion.fromUrl","location":"player/video.api.player.models/-video-options/-companion/from-url.html","searchKeys":["fromUrl","fun fromUrl(url: String): VideoOptions","video.api.player.models.VideoOptions.Companion.fromUrl"]},{"name":"fun fromUrl(url: URL): VideoOptions","description":"video.api.player.models.VideoOptions.Companion.fromUrl","location":"player/video.api.player.models/-video-options/-companion/from-url.html","searchKeys":["fromUrl","fun fromUrl(url: URL): VideoOptions","video.api.player.models.VideoOptions.Companion.fromUrl"]},{"name":"fun fromValue(value: Int): ApiVideoExoPlayerView.ViewFit","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.Companion.fromValue","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-companion/from-value.html","searchKeys":["fromValue","fun fromValue(value: Int): ApiVideoExoPlayerView.ViewFit","video.api.player.views.ApiVideoExoPlayerView.ViewFit.Companion.fromValue"]},{"name":"fun getImage(url: String, maxWidth: Int, maxHeight: Int, scaleType: ImageView.ScaleType, onSuccess: (Bitmap) -> Unit, onError: (Exception) -> Unit)","description":"video.api.player.utils.RequestManager.getImage","location":"player/video.api.player.utils/-request-manager/get-image.html","searchKeys":["getImage","fun getImage(url: String, maxWidth: Int, maxHeight: Int, scaleType: ImageView.ScaleType, onSuccess: (Bitmap) -> Unit, onError: (Exception) -> Unit)","video.api.player.utils.RequestManager.getImage"]},{"name":"fun getMediaItem(onSuccess: (MediaItem) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.getMediaItem","location":"player/video.api.player.models/-api-video-exo-player-media-factory/get-media-item.html","searchKeys":["getMediaItem","fun getMediaItem(onSuccess: (MediaItem) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.getMediaItem"]},{"name":"fun getMediaSource(onSuccess: (MediaSource) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.getMediaSource","location":"player/video.api.player.models/-api-video-exo-player-media-factory/get-media-source.html","searchKeys":["getMediaSource","fun getMediaSource(onSuccess: (MediaSource) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.getMediaSource"]},{"name":"fun getMp4MediaItem(onSuccess: (MediaItem) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.getMp4MediaItem","location":"player/video.api.player.models/-api-video-exo-player-media-factory/get-mp4-media-item.html","searchKeys":["getMp4MediaItem","fun getMp4MediaItem(onSuccess: (MediaItem) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.getMp4MediaItem"]},{"name":"fun getMp4MediaSource(onSuccess: (MediaSource) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.getMp4MediaSource","location":"player/video.api.player.models/-api-video-exo-player-media-factory/get-mp4-media-source.html","searchKeys":["getMp4MediaSource","fun getMp4MediaSource(onSuccess: (MediaSource) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.getMp4MediaSource"]},{"name":"fun getMp4VideoUrl(onSuccess: (PlayerMediaRequest) -> Unit)","description":"video.api.player.models.ApiVideoMediaFactory.getMp4VideoUrl","location":"player/video.api.player.models/-api-video-media-factory/get-mp4-video-url.html","searchKeys":["getMp4VideoUrl","fun getMp4VideoUrl(onSuccess: (PlayerMediaRequest) -> Unit)","video.api.player.models.ApiVideoMediaFactory.getMp4VideoUrl"]},{"name":"fun getSessionToken(url: String, videoType: VideoType, onSuccess: (String?) -> Unit, onError: (Exception) -> Unit)","description":"video.api.player.utils.RequestManager.getSessionToken","location":"player/video.api.player.utils/-request-manager/get-session-token.html","searchKeys":["getSessionToken","fun getSessionToken(url: String, videoType: VideoType, onSuccess: (String?) -> Unit, onError: (Exception) -> Unit)","video.api.player.utils.RequestManager.getSessionToken"]},{"name":"fun getThumbnailUrl(onSuccess: (String) -> Unit)","description":"video.api.player.models.ApiVideoExoPlayerMediaFactory.getThumbnailUrl","location":"player/video.api.player.models/-api-video-exo-player-media-factory/get-thumbnail-url.html","searchKeys":["getThumbnailUrl","fun getThumbnailUrl(onSuccess: (String) -> Unit)","video.api.player.models.ApiVideoExoPlayerMediaFactory.getThumbnailUrl"]},{"name":"fun getThumbnailUrl(onSuccess: (String) -> Unit)","description":"video.api.player.models.ApiVideoMediaFactory.getThumbnailUrl","location":"player/video.api.player.models/-api-video-media-factory/get-thumbnail-url.html","searchKeys":["getThumbnailUrl","fun getThumbnailUrl(onSuccess: (String) -> Unit)","video.api.player.models.ApiVideoMediaFactory.getThumbnailUrl"]},{"name":"fun getVideoUrl(onSuccess: (PlayerMediaRequest) -> Unit)","description":"video.api.player.models.ApiVideoMediaFactory.getVideoUrl","location":"player/video.api.player.models/-api-video-media-factory/get-video-url.html","searchKeys":["getVideoUrl","fun getVideoUrl(onSuccess: (PlayerMediaRequest) -> Unit)","video.api.player.models.ApiVideoMediaFactory.getVideoUrl"]},{"name":"fun hideNotification()","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.hideNotification","location":"player/video.api.player.notifications/-api-video-player-notification-controller/hide-notification.html","searchKeys":["hideNotification","fun hideNotification()","video.api.player.notifications.ApiVideoPlayerNotificationController.hideNotification"]},{"name":"fun parseMediaUrl(mediaUrl: String): VideoOptions","description":"video.api.player.utils.Utils.parseMediaUrl","location":"player/video.api.player.utils/-utils/parse-media-url.html","searchKeys":["parseMediaUrl","fun parseMediaUrl(mediaUrl: String): VideoOptions","video.api.player.utils.Utils.parseMediaUrl"]},{"name":"fun parseMediaUrl(mediaUrl: URL): VideoOptions","description":"video.api.player.utils.Utils.parseMediaUrl","location":"player/video.api.player.utils/-utils/parse-media-url.html","searchKeys":["parseMediaUrl","fun parseMediaUrl(mediaUrl: URL): VideoOptions","video.api.player.utils.Utils.parseMediaUrl"]},{"name":"fun pause()","description":"video.api.player.ApiVideoPlayerController.pause","location":"player/video.api.player/-api-video-player-controller/pause.html","searchKeys":["pause","fun pause()","video.api.player.ApiVideoPlayerController.pause"]},{"name":"fun play()","description":"video.api.player.ApiVideoPlayerController.play","location":"player/video.api.player/-api-video-player-controller/play.html","searchKeys":["play","fun play()","video.api.player.ApiVideoPlayerController.play"]},{"name":"fun release()","description":"video.api.player.ApiVideoPlayerController.release","location":"player/video.api.player/-api-video-player-controller/release.html","searchKeys":["release","fun release()","video.api.player.ApiVideoPlayerController.release"]},{"name":"fun removeListener(listener: ApiVideoPlayerController.Listener)","description":"video.api.player.ApiVideoPlayerController.removeListener","location":"player/video.api.player/-api-video-player-controller/remove-listener.html","searchKeys":["removeListener","fun removeListener(listener: ApiVideoPlayerController.Listener)","video.api.player.ApiVideoPlayerController.removeListener"]},{"name":"fun seek(offset: Float)","description":"video.api.player.ApiVideoPlayerController.seek","location":"player/video.api.player/-api-video-player-controller/seek.html","searchKeys":["seek","fun seek(offset: Float)","video.api.player.ApiVideoPlayerController.seek"]},{"name":"fun setPlayerView(playerView: PlayerView)","description":"video.api.player.ApiVideoPlayerController.setPlayerView","location":"player/video.api.player/-api-video-player-controller/set-player-view.html","searchKeys":["setPlayerView","fun setPlayerView(playerView: PlayerView)","video.api.player.ApiVideoPlayerController.setPlayerView"]},{"name":"fun setPlayerView(view: ApiVideoExoPlayerView): <Error class: unknown class>","description":"video.api.player.ApiVideoPlayerController.setPlayerView","location":"player/video.api.player/-api-video-player-controller/set-player-view.html","searchKeys":["setPlayerView","fun setPlayerView(view: ApiVideoExoPlayerView): <Error class: unknown class>","video.api.player.ApiVideoPlayerController.setPlayerView"]},{"name":"fun setSurface(surface: Surface)","description":"video.api.player.ApiVideoPlayerController.setSurface","location":"player/video.api.player/-api-video-player-controller/set-surface.html","searchKeys":["setSurface","fun setSurface(surface: Surface)","video.api.player.ApiVideoPlayerController.setSurface"]},{"name":"fun setSurfaceView(surfaceView: SurfaceView)","description":"video.api.player.ApiVideoPlayerController.setSurfaceView","location":"player/video.api.player/-api-video-player-controller/set-surface-view.html","searchKeys":["setSurfaceView","fun setSurfaceView(surfaceView: SurfaceView)","video.api.player.ApiVideoPlayerController.setSurfaceView"]},{"name":"fun showNotification(player: ExoPlayer)","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.showNotification","location":"player/video.api.player.notifications/-api-video-player-notification-controller/show-notification.html","searchKeys":["showNotification","fun showNotification(player: ExoPlayer)","video.api.player.notifications.ApiVideoPlayerNotificationController.showNotification"]},{"name":"fun stop()","description":"video.api.player.ApiVideoPlayerController.stop","location":"player/video.api.player/-api-video-player-controller/stop.html","searchKeys":["stop","fun stop()","video.api.player.ApiVideoPlayerController.stop"]},{"name":"fun switchTargetView(oldPlayerView: ApiVideoExoPlayerView, newPlayerView: ApiVideoExoPlayerView): <Error class: unknown class>","description":"video.api.player.ApiVideoPlayerController.switchTargetView","location":"player/video.api.player/-api-video-player-controller/switch-target-view.html","searchKeys":["switchTargetView","fun switchTargetView(oldPlayerView: ApiVideoExoPlayerView, newPlayerView: ApiVideoExoPlayerView): <Error class: unknown class>","video.api.player.ApiVideoPlayerController.switchTargetView"]},{"name":"fun switchTargetView(oldPlayerView: PlayerView, newPlayerView: PlayerView)","description":"video.api.player.ApiVideoPlayerController.switchTargetView","location":"player/video.api.player/-api-video-player-controller/switch-target-view.html","searchKeys":["switchTargetView","fun switchTargetView(oldPlayerView: PlayerView, newPlayerView: PlayerView)","video.api.player.ApiVideoPlayerController.switchTargetView"]},{"name":"fun valueOf(value: String): ApiVideoExoPlayerView.ViewFit","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.valueOf","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ApiVideoExoPlayerView.ViewFit","video.api.player.views.ApiVideoExoPlayerView.ViewFit.valueOf"]},{"name":"fun valueOf(value: String): VideoType","description":"video.api.player.models.VideoType.valueOf","location":"player/video.api.player.models/-video-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): VideoType","video.api.player.models.VideoType.valueOf"]},{"name":"fun values(): Array<ApiVideoExoPlayerView.ViewFit>","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.values","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/values.html","searchKeys":["values","fun values(): Array<ApiVideoExoPlayerView.ViewFit>","video.api.player.views.ApiVideoExoPlayerView.ViewFit.values"]},{"name":"fun values(): Array<VideoType>","description":"video.api.player.models.VideoType.values","location":"player/video.api.player.models/-video-type/values.html","searchKeys":["values","fun values(): Array<VideoType>","video.api.player.models.VideoType.values"]},{"name":"interface FullScreenListener","description":"video.api.player.views.ApiVideoExoPlayerView.FullScreenListener","location":"player/video.api.player.views/-api-video-exo-player-view/-full-screen-listener/index.html","searchKeys":["FullScreenListener","interface FullScreenListener","video.api.player.views.ApiVideoExoPlayerView.FullScreenListener"]},{"name":"interface Listener","description":"video.api.player.ApiVideoPlayerController.Listener","location":"player/video.api.player/-api-video-player-controller/-listener/index.html","searchKeys":["Listener","interface Listener","video.api.player.ApiVideoPlayerController.Listener"]},{"name":"object Companion","description":"video.api.player.ApiVideoPlayerController.Companion","location":"player/video.api.player/-api-video-player-controller/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.ApiVideoPlayerController.Companion"]},{"name":"object Companion","description":"video.api.player.models.ApiVideoPlayerFullScreenController.Companion","location":"player/video.api.player.models/-api-video-player-full-screen-controller/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.models.ApiVideoPlayerFullScreenController.Companion"]},{"name":"object Companion","description":"video.api.player.models.VideoOptions.Companion","location":"player/video.api.player.models/-video-options/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.models.VideoOptions.Companion"]},{"name":"object Companion","description":"video.api.player.models.VideoType.Companion","location":"player/video.api.player.models/-video-type/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.models.VideoType.Companion"]},{"name":"object Companion","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.Companion","location":"player/video.api.player.notifications/-api-video-player-notification-controller/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.notifications.ApiVideoPlayerNotificationController.Companion"]},{"name":"object Companion","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.Companion","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/-companion/index.html","searchKeys":["Companion","object Companion","video.api.player.views.ApiVideoExoPlayerView.ViewFit.Companion"]},{"name":"object RequestManager","description":"video.api.player.utils.RequestManager","location":"player/video.api.player.utils/-request-manager/index.html","searchKeys":["RequestManager","object RequestManager","video.api.player.utils.RequestManager"]},{"name":"object Utils","description":"video.api.player.utils.Utils","location":"player/video.api.player.utils/-utils/index.html","searchKeys":["Utils","object Utils","video.api.player.utils.Utils"]},{"name":"open fun onEnd()","description":"video.api.player.ApiVideoPlayerController.Listener.onEnd","location":"player/video.api.player/-api-video-player-controller/-listener/on-end.html","searchKeys":["onEnd","open fun onEnd()","video.api.player.ApiVideoPlayerController.Listener.onEnd"]},{"name":"open fun onError(error: Exception)","description":"video.api.player.ApiVideoPlayerController.Listener.onError","location":"player/video.api.player/-api-video-player-controller/-listener/on-error.html","searchKeys":["onError","open fun onError(error: Exception)","video.api.player.ApiVideoPlayerController.Listener.onError"]},{"name":"open fun onFirstPlay()","description":"video.api.player.ApiVideoPlayerController.Listener.onFirstPlay","location":"player/video.api.player/-api-video-player-controller/-listener/on-first-play.html","searchKeys":["onFirstPlay","open fun onFirstPlay()","video.api.player.ApiVideoPlayerController.Listener.onFirstPlay"]},{"name":"open fun onFullScreenModeChanged(isFullScreen: Boolean)","description":"video.api.player.views.ApiVideoExoPlayerView.FullScreenListener.onFullScreenModeChanged","location":"player/video.api.player.views/-api-video-exo-player-view/-full-screen-listener/on-full-screen-mode-changed.html","searchKeys":["onFullScreenModeChanged","open fun onFullScreenModeChanged(isFullScreen: Boolean)","video.api.player.views.ApiVideoExoPlayerView.FullScreenListener.onFullScreenModeChanged"]},{"name":"open fun onPause()","description":"video.api.player.ApiVideoPlayerController.Listener.onPause","location":"player/video.api.player/-api-video-player-controller/-listener/on-pause.html","searchKeys":["onPause","open fun onPause()","video.api.player.ApiVideoPlayerController.Listener.onPause"]},{"name":"open fun onPlay()","description":"video.api.player.ApiVideoPlayerController.Listener.onPlay","location":"player/video.api.player/-api-video-player-controller/-listener/on-play.html","searchKeys":["onPlay","open fun onPlay()","video.api.player.ApiVideoPlayerController.Listener.onPlay"]},{"name":"open fun onReady()","description":"video.api.player.ApiVideoPlayerController.Listener.onReady","location":"player/video.api.player/-api-video-player-controller/-listener/on-ready.html","searchKeys":["onReady","open fun onReady()","video.api.player.ApiVideoPlayerController.Listener.onReady"]},{"name":"open fun onSeek()","description":"video.api.player.ApiVideoPlayerController.Listener.onSeek","location":"player/video.api.player/-api-video-player-controller/-listener/on-seek.html","searchKeys":["onSeek","open fun onSeek()","video.api.player.ApiVideoPlayerController.Listener.onSeek"]},{"name":"open fun onVideoSizeChanged(resolution: Size)","description":"video.api.player.ApiVideoPlayerController.Listener.onVideoSizeChanged","location":"player/video.api.player/-api-video-player-controller/-listener/on-video-size-changed.html","searchKeys":["onVideoSizeChanged","open fun onVideoSizeChanged(resolution: Size)","video.api.player.ApiVideoPlayerController.Listener.onVideoSizeChanged"]},{"name":"open override fun onCreate(savedInstanceState: Bundle?)","description":"video.api.player.views.FullScreenDialogFragment.onCreate","location":"player/video.api.player.views/-full-screen-dialog-fragment/on-create.html","searchKeys":["onCreate","open override fun onCreate(savedInstanceState: Bundle?)","video.api.player.views.FullScreenDialogFragment.onCreate"]},{"name":"open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","description":"video.api.player.views.FullScreenDialogFragment.onCreateView","location":"player/video.api.player.views/-full-screen-dialog-fragment/on-create-view.html","searchKeys":["onCreateView","open override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View","video.api.player.views.FullScreenDialogFragment.onCreateView"]},{"name":"open override fun onFullScreenModeChanged(isFullScreen: Boolean)","description":"video.api.player.models.ApiVideoPlayerFullScreenController.onFullScreenModeChanged","location":"player/video.api.player.models/-api-video-player-full-screen-controller/on-full-screen-mode-changed.html","searchKeys":["onFullScreenModeChanged","open override fun onFullScreenModeChanged(isFullScreen: Boolean)","video.api.player.models.ApiVideoPlayerFullScreenController.onFullScreenModeChanged"]},{"name":"open override fun onStart()","description":"video.api.player.views.FullScreenDialogFragment.onStart","location":"player/video.api.player.views/-full-screen-dialog-fragment/on-start.html","searchKeys":["onStart","open override fun onStart()","video.api.player.views.FullScreenDialogFragment.onStart"]},{"name":"val Player.currentVideoOptions: VideoOptions?","description":"video.api.player.extensions.currentVideoOptions","location":"player/video.api.player.extensions/current-video-options.html","searchKeys":["currentVideoOptions","val Player.currentVideoOptions: VideoOptions?","video.api.player.extensions.currentVideoOptions"]},{"name":"val baseUrl: String","description":"video.api.player.models.VideoType.baseUrl","location":"player/video.api.player.models/-video-type/base-url.html","searchKeys":["baseUrl","val baseUrl: String","video.api.player.models.VideoType.baseUrl"]},{"name":"val colorResourceId: Int","description":"video.api.player.notifications.NotificationStyle.colorResourceId","location":"player/video.api.player.notifications/-notification-style/color-resource-id.html","searchKeys":["colorResourceId","val colorResourceId: Int","video.api.player.notifications.NotificationStyle.colorResourceId"]},{"name":"val duration: Float","description":"video.api.player.ApiVideoPlayerController.duration","location":"player/video.api.player/-api-video-player-controller/duration.html","searchKeys":["duration","val duration: Float","video.api.player.ApiVideoPlayerController.duration"]},{"name":"val entries: EnumEntries<ApiVideoExoPlayerView.ViewFit>","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.entries","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/entries.html","searchKeys":["entries","val entries: EnumEntries<ApiVideoExoPlayerView.ViewFit>","video.api.player.views.ApiVideoExoPlayerView.ViewFit.entries"]},{"name":"val entries: EnumEntries<VideoType>","description":"video.api.player.models.VideoType.entries","location":"player/video.api.player.models/-video-type/entries.html","searchKeys":["entries","val entries: EnumEntries<VideoType>","video.api.player.models.VideoType.entries"]},{"name":"val headers: Map<String, String>?","description":"video.api.player.models.PlayerMediaRequest.headers","location":"player/video.api.player.models/-player-media-request/headers.html","searchKeys":["headers","val headers: Map<String, String>?","video.api.player.models.PlayerMediaRequest.headers"]},{"name":"val isLive: Boolean","description":"video.api.player.ApiVideoPlayerController.isLive","location":"player/video.api.player/-api-video-player-controller/is-live.html","searchKeys":["isLive","val isLive: Boolean","video.api.player.ApiVideoPlayerController.isLive"]},{"name":"val isPlaying: Boolean","description":"video.api.player.ApiVideoPlayerController.isPlaying","location":"player/video.api.player/-api-video-player-controller/is-playing.html","searchKeys":["isPlaying","val isPlaying: Boolean","video.api.player.ApiVideoPlayerController.isPlaying"]},{"name":"val smallIconResourceId: Int","description":"video.api.player.notifications.NotificationStyle.smallIconResourceId","location":"player/video.api.player.notifications/-notification-style/small-icon-resource-id.html","searchKeys":["smallIconResourceId","val smallIconResourceId: Int","video.api.player.notifications.NotificationStyle.smallIconResourceId"]},{"name":"val token: String? = null","description":"video.api.player.models.VideoOptions.token","location":"player/video.api.player.models/-video-options/token.html","searchKeys":["token","val token: String? = null","video.api.player.models.VideoOptions.token"]},{"name":"val uri: String","description":"video.api.player.models.PlayerMediaRequest.uri","location":"player/video.api.player.models/-player-media-request/uri.html","searchKeys":["uri","val uri: String","video.api.player.models.PlayerMediaRequest.uri"]},{"name":"val uriWithQuery: String","description":"video.api.player.models.PlayerMediaRequest.uriWithQuery","location":"player/video.api.player.models/-player-media-request/uri-with-query.html","searchKeys":["uriWithQuery","val uriWithQuery: String","video.api.player.models.PlayerMediaRequest.uriWithQuery"]},{"name":"val value: Int","description":"video.api.player.views.ApiVideoExoPlayerView.ViewFit.value","location":"player/video.api.player.views/-api-video-exo-player-view/-view-fit/value.html","searchKeys":["value","val value: Int","video.api.player.views.ApiVideoExoPlayerView.ViewFit.value"]},{"name":"val videoId: String","description":"video.api.player.models.VideoOptions.videoId","location":"player/video.api.player.models/-video-options/video-id.html","searchKeys":["videoId","val videoId: String","video.api.player.models.VideoOptions.videoId"]},{"name":"val videoSize: Size?","description":"video.api.player.ApiVideoPlayerController.videoSize","location":"player/video.api.player/-api-video-player-controller/video-size.html","searchKeys":["videoSize","val videoSize: Size?","video.api.player.ApiVideoPlayerController.videoSize"]},{"name":"val videoType: VideoType","description":"video.api.player.models.VideoOptions.videoType","location":"player/video.api.player.models/-video-options/video-type.html","searchKeys":["videoType","val videoType: VideoType","video.api.player.models.VideoOptions.videoType"]},{"name":"val visibility: Int","description":"video.api.player.notifications.NotificationStyle.visibility","location":"player/video.api.player.notifications/-notification-style/visibility.html","searchKeys":["visibility","val visibility: Int","video.api.player.notifications.NotificationStyle.visibility"]},{"name":"val xTokenSession: String? = null","description":"video.api.player.models.PlayerMediaRequest.xTokenSession","location":"player/video.api.player.models/-player-media-request/x-token-session.html","searchKeys":["xTokenSession","val xTokenSession: String? = null","video.api.player.models.PlayerMediaRequest.xTokenSession"]},{"name":"var autoplay: Boolean","description":"video.api.player.ApiVideoPlayerController.autoplay","location":"player/video.api.player/-api-video-player-controller/autoplay.html","searchKeys":["autoplay","var autoplay: Boolean","video.api.player.ApiVideoPlayerController.autoplay"]},{"name":"var currentTime: Float","description":"video.api.player.ApiVideoPlayerController.currentTime","location":"player/video.api.player/-api-video-player-controller/current-time.html","searchKeys":["currentTime","var currentTime: Float","video.api.player.ApiVideoPlayerController.currentTime"]},{"name":"var fullScreenListener: ApiVideoExoPlayerView.FullScreenListener?","description":"video.api.player.views.ApiVideoExoPlayerView.fullScreenListener","location":"player/video.api.player.views/-api-video-exo-player-view/full-screen-listener.html","searchKeys":["fullScreenListener","var fullScreenListener: ApiVideoExoPlayerView.FullScreenListener?","video.api.player.views.ApiVideoExoPlayerView.fullScreenListener"]},{"name":"var isActive: Boolean","description":"video.api.player.notifications.ApiVideoPlayerNotificationController.isActive","location":"player/video.api.player.notifications/-api-video-player-notification-controller/is-active.html","searchKeys":["isActive","var isActive: Boolean","video.api.player.notifications.ApiVideoPlayerNotificationController.isActive"]},{"name":"var isLooping: Boolean","description":"video.api.player.ApiVideoPlayerController.isLooping","location":"player/video.api.player/-api-video-player-controller/is-looping.html","searchKeys":["isLooping","var isLooping: Boolean","video.api.player.ApiVideoPlayerController.isLooping"]},{"name":"var isMuted: Boolean","description":"video.api.player.ApiVideoPlayerController.isMuted","location":"player/video.api.player/-api-video-player-controller/is-muted.html","searchKeys":["isMuted","var isMuted: Boolean","video.api.player.ApiVideoPlayerController.isMuted"]},{"name":"var playbackSpeed: Float","description":"video.api.player.ApiVideoPlayerController.playbackSpeed","location":"player/video.api.player/-api-video-player-controller/playback-speed.html","searchKeys":["playbackSpeed","var playbackSpeed: Float","video.api.player.ApiVideoPlayerController.playbackSpeed"]},{"name":"var showControls: Boolean","description":"video.api.player.views.ApiVideoExoPlayerView.showControls","location":"player/video.api.player.views/-api-video-exo-player-view/show-controls.html","searchKeys":["showControls","var showControls: Boolean","video.api.player.views.ApiVideoExoPlayerView.showControls"]},{"name":"var showSubtitles: Boolean","description":"video.api.player.views.ApiVideoExoPlayerView.showSubtitles","location":"player/video.api.player.views/-api-video-exo-player-view/show-subtitles.html","searchKeys":["showSubtitles","var showSubtitles: Boolean","video.api.player.views.ApiVideoExoPlayerView.showSubtitles"]},{"name":"var videoOptions: VideoOptions?","description":"video.api.player.ApiVideoPlayerController.videoOptions","location":"player/video.api.player/-api-video-player-controller/video-options.html","searchKeys":["videoOptions","var videoOptions: VideoOptions?","video.api.player.ApiVideoPlayerController.videoOptions"]},{"name":"var viewFit: ApiVideoExoPlayerView.ViewFit","description":"video.api.player.views.ApiVideoExoPlayerView.viewFit","location":"player/video.api.player.views/-api-video-exo-player-view/view-fit.html","searchKeys":["viewFit","var viewFit: ApiVideoExoPlayerView.ViewFit","video.api.player.views.ApiVideoExoPlayerView.viewFit"]},{"name":"var volume: Float","description":"video.api.player.ApiVideoPlayerController.volume","location":"player/video.api.player/-api-video-player-controller/volume.html","searchKeys":["volume","var volume: Float","video.api.player.ApiVideoPlayerController.volume"]}]
